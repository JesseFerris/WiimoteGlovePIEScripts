/*
    GlovePIE Script - Wiimote - Half Life.
    Copyright (C) 2024  Jesse Ferris

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

/*
    How To Use: Connect Wiimote via Bluetooth. Run this script with GlovePIE.exe created by Carl Kenner. (http://sites.google.com/site/carlkenner/glovepie) (https://github.com/GlovePIEPreservation/GlovePIE?tab=readme-ov-file)
    Description: Emulates Mouse and Keyboard from Wiimote controller.
    Game Settings: Default Bindings.
*/

// Set GlovePIE Frame Rate to Wiimote IR Camera Hz, Disable LEDs
Pie.RealFrameRate = 100Hz
Wiimote.Leds = 0

// Imaginary Box Size
var.BoxWidth = 20
var.BoxHeight = 15

// Sensitivity Adjustments
var.Sensitivity = 20
var.AutoTurnSpeed = 40

// Pointer Tracking, Auto-turn, Mouse Output
If Helddown(Wiimote.PointerVisible, 750ms)

    var.PointerX = (Wiimote.PointerX - 1/2) * 100
    var.PointerY = (Wiimote.PointerY - 1/2) * 100

    var.ModifyerX = Delta(var.PointerX) * var.Sensitivity
    var.ModifyerY = Delta(var.PointerY) * var.Sensitivity
                                                                                    
    If abs(var.PointerX) > var.BoxWidth then var.ModifyerX += ((abs(var.PointerX) - var.BoxWidth) / var.PointerX) * var.AutoTurnSpeed
    If abs(var.PointerY) > var.BoxHeight then var.ModifyerY += ((abs(var.PointerY) - var.BoxHeight) / var.PointerY) * var.AutoTurnSpeed

    Mouse.DirectInputX += var.ModifyerX
    Mouse.DirectInputY += var.ModifyerY

Else
    var.XMod = 0
    var.YMod = 0
Endif

// Button Mapping
Key.E                =    Wiimote.Up
Key.R                =    Wiimote.Down
Key.Q                =    Wiimote.Left
Key.F                =    Wiimote.Right

Mouse.RightButton    =    Wiimote.A
Mouse.LeftButton     =    Wiimote.B
Mouse.LeftButton     =    (Helddown(not Wiimote.One, 750ms) but not Helddown(not Wiimote.One, 1000ms)) or (Helddown(not Wiimote.Two, 750ms) but not Helddown(not Wiimote.Two, 1000ms))

Mouse.WheelDown      =    Wiimote.Plus
Key.Esc              =    Wiimote.Home
Mouse.WheelUp        =    Wiimote.Minus

Key.1                =    Keepdown(Wiimote.One, 250ms) and Helddown(not Wiimote.One, 100ms) and Helddown(not Wiimote.Two, 250ms)
Key.3                =    Helddown(Wiimote.One, 250ms) and Helddown(not Wiimote.Two, 250ms)
Key.5                =    Helddown(Wiimote.One and Wiimote.Two, 150ms)
Key.2                =    Keepdown(Wiimote.Two, 250ms) and Helddown(not Wiimote.Two, 100ms)
Key.4                =    Helddown(Wiimote.Two, 250ms) and Helddown(not Wiimote.One, 250ms) and Helddown(not Wiimote.One, 250ms)

Key.W                =    Wiimote.Nunchuk.JoyY < -0.15
Key.S                =    Wiimote.Nunchuk.JoyY > 0.15
Key.A                =    Wiimote.Nunchuk.JoyX < -0.15
Key.D                =    Wiimote.Nunchuk.JoyX > 0.15

Key.Shift            =    ((abs(Wiimote.Nunchuk.JoyX) < 0.45 and > 0.15) or (abs(Wiimote.Nunchuk.JoyY) < 0.45 and > 0.15)) but not ((abs(Wiimote.Nunchuk.JoyX) > 0.65) or (abs(Wiimote.Nunchuk.JoyY) > 0.65))
Key.Space            =    Wiimote.Nunchuk.CButton
Key.Ctrl             =    Wiimote.Nunchuk.ZButton
